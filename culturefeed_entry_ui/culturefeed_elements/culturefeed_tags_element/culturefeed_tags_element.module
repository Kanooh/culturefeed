<?php
/**
 * @file
 * Contains the CultureFeed Tags element module.
 */

/**
 * Implements hook_element_info().
 */
function culturefeed_tags_element_element_info() {

  return array(
    'culturefeed_tags_element' => array(
      '#element_validate' => array('culturefeed_tags_element_tags_element_validate'),
      '#input' => TRUE,
      '#process' => array('culturefeed_tags_element_tags_element_process', 'ajax_process_form'),
      '#tree' => TRUE,
      '#value_callback' => 'culturefeed_tags_element_tags_element_value_callback',
    ),
  );

}

/**
 * Process function for the culturefeed keywords element.
 *
 * @param array $element
 *   The element.
 * @param array $form_state
 *   The form state.
 * @param array $form
 *   The form.
 *
 * @return array
 *   The processed element.
 */
function culturefeed_tags_element_tags_element_process(array $element, array &$form_state, array $form) {

  $element_id = $element['#id'];
  $array_parents = $element['#array_parents'];

  $element['#prefix'] = "<div id=\"" . $element_id . "-ajax-wrapper\">";
  $element['#suffix'] = "</div>";

  // Tags.
  $tags = $element['#value'];

  $element['keywords'] = array(
    '#attached' => array(
      'css' => array(
        drupal_get_path('module', 'culturefeed_tags_element') . '/css/culturefeed_tags_element.css',
      ),
    ),
    '#attributes' => array('class' => array('edit-tags-form-table')),
    '#theme' => 'culturefeed_tags_element_tags_element_form_table',
  );

  foreach ($tags['keywords'] as $key => $tag) {

    $tag_elements = array(
      'value' => array(
        '#default_value' => $tag['value'],
        '#type' => 'textfield',
      ),
      'visible' => array(
        '#default_value' => isset($tag['visible']) ? $tag['visible'] : 0,
        '#title' => t('Hide tag'),
        '#type' => 'checkbox',
      ),
    );

    if (count($tags['keywords']) > 1) {

      $tag_elements['remove'] = array(
        '#ajax' => array(
          'path' => 'culturefeed_elements/ajax/' . implode('/', $array_parents),
          'wrapper' => $element_id . '-ajax-wrapper',
        ),
        '#name' => 'remove_' . $key,
        '#submit' => array('culturefeed_tags_element_tags_element_process_submit'),
        '#type' => 'submit',
        '#value' => t('Remove tag'),
      );

    }

    $element['keywords'][$key] = $tag_elements;

  }

  $element['add_tag'] = array(
    '#ajax' => array(
      'path' => 'culturefeed_elements/ajax/' . implode('/', $array_parents),
      'wrapper' => $element_id . '-ajax-wrapper',
    ),
    '#attributes' => array(
      'class' => array('edit-tags-add-tag'),
    ),
    '#submit' => array('culturefeed_tags_element_tags_element_process_submit'),
    '#type' => 'submit',
    '#value' => t('Add tag'),
  );

  return $element;

}

/**
 * Validation handler for the culturefeed keywords element.
 *
 * @param array $element
 *   The element.
 * @param array $form_state
 *   The form state.
 */
function culturefeed_tags_element_tags_element_validate(array &$element, array &$form_state) {

  // Triggering data.
  $triggering_element = (isset($form_state['triggering_element'])) ? $form_state['triggering_element'] : '';
  $triggering_parent = array_pop($triggering_element['#array_parents']);
  $tags = $element['#value'];

  if (culturefeed_elements_check_trigger_element($triggering_element, $element)) {

    // Check if a tag needs to be added.
    if ($triggering_parent == 'add_tag') {
      $tag = array('value' => '');
      $tags['keywords'][] = $tag;
    }

    // Check if a tag needs to be removed.  This is done here as renumbering
    // needs to be ensured.
    if ($triggering_parent == 'remove') {

      $index = array_pop($triggering_element['#array_parents']);
      array_splice($tags['keywords'], $index, 1);

    }

  }

  // Drop the keywords wrapper so clean tags are returned to the form.
  drupal_array_set_nested_value($form_state['input'], $element['#parents'], $tags);
  drupal_array_set_nested_value($form_state['values'], $element['#parents'], $tags['keywords']);

}

/**
 * Submit handler for the culturefeed keywords element.
 */
function culturefeed_tags_element_tags_element_process_submit($form, &$form_state) {

  $form_state['rebuild'] = TRUE;

}

/**
 * Implements hook_theme().
 */
function culturefeed_tags_element_theme() {

  return array(
    'culturefeed_tags_element_tags_element_form_table' => array(
      'render element' => 'form',
      'path' => drupal_get_path('module', 'culturefeed_tags_element') . '/theme',
      'file' => 'theme.inc',
    ),
  );
}

/**
 * Value callback for the culturefeed date control timestamps element.
 *
 * @param array $element
 *   The element.
 * @param mixed $input
 *   The input.
 * @param array $form_state
 *   The form state.
 *
 * @return mixed
 *   The value.
 */
function culturefeed_tags_element_tags_element_value_callback(array $element, $input, array $form_state) {

  if ($input) {
    return $input;
  }
  else {

    $value = array('keywords' => array());

    if (isset($element['#default_value']) && $element['#default_value']) {
      $value['keywords'] = $element['#default_value'];
    }

    return $value;

  }

}
